// Copyright Jetstack Ltd. See LICENSE for details.
// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jetstack/tarmak/pkg/wing/client/typed/wing/v1alpha1 (interfaces: WingV1alpha1Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/jetstack/tarmak/pkg/wing/client/typed/wing/v1alpha1"
	rest "k8s.io/client-go/rest"
	reflect "reflect"
)

// MockWingV1alpha1Interface is a mock of WingV1alpha1Interface interface
type MockWingV1alpha1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockWingV1alpha1InterfaceMockRecorder
}

// MockWingV1alpha1InterfaceMockRecorder is the mock recorder for MockWingV1alpha1Interface
type MockWingV1alpha1InterfaceMockRecorder struct {
	mock *MockWingV1alpha1Interface
}

// NewMockWingV1alpha1Interface creates a new mock instance
func NewMockWingV1alpha1Interface(ctrl *gomock.Controller) *MockWingV1alpha1Interface {
	mock := &MockWingV1alpha1Interface{ctrl: ctrl}
	mock.recorder = &MockWingV1alpha1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWingV1alpha1Interface) EXPECT() *MockWingV1alpha1InterfaceMockRecorder {
	return m.recorder
}

// Instances mocks base method
func (m *MockWingV1alpha1Interface) Instances(arg0 string) v1alpha1.InstanceInterface {
	ret := m.ctrl.Call(m, "Instances", arg0)
	ret0, _ := ret[0].(v1alpha1.InstanceInterface)
	return ret0
}

// Instances indicates an expected call of Instances
func (mr *MockWingV1alpha1InterfaceMockRecorder) Instances(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Instances", reflect.TypeOf((*MockWingV1alpha1Interface)(nil).Instances), arg0)
}

// RESTClient mocks base method
func (m *MockWingV1alpha1Interface) RESTClient() rest.Interface {
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient
func (mr *MockWingV1alpha1InterfaceMockRecorder) RESTClient() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockWingV1alpha1Interface)(nil).RESTClient))
}
