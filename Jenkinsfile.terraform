// vim: et:ts=2:sw=2:ft=groovy
node {
  checkout scm

  def splitJobName = env.JOB_NAME.split('/')

  def terraformStack = splitJobName[-1]
  def terraformName = splitJobName[-2]
  def terraformEnvironment = splitJobName[-3]

  def imageName = "platform.kubernetes.terraform:${terraformEnvironment}-${terraformName}-${terraformStack}-${env.BUILD_NUMBER}"

  stage ('build docker image'){
    docker.build(imageName)
  }

  if (terraformStack == 'vault') {
    stage("ensure vault secrets exist") {
      wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
        sh "docker run --rm ${imageName} bundle exec rake vault:secrets TERRAFORM_ENVIRONMENT=${terraformEnvironment}"
      }
    }
  }

  def statusPlan = 0
  def dockerVolume = ''

  stage("terraform plan ${terraformStack}") {
    wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
      dockerVolume = sh(script: "docker volume create", returnStdout: true).trim()
      statusPlan = sh script: "docker run --rm -v ${dockerVolume}:/share ${imageName} bundle exec rake terraform:plan TERRAFORM_NAME=${terraformName} TERRAFORM_ENVIRONMENT=${terraformEnvironment} TERRAFORM_STACK=${terraformStack} TERRAFORM_PLAN=/share/terraform.plan", returnStatus: true
    }
  }

  // this is only run if plan has actual changes
  stage("terraform apply ${terraformStack}") {
    if (statusPlan == 2){
      input 'Shall I apply?'
      wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
        sh "docker run --rm -v ${dockerVolume}:/share ${imageName} bundle exec rake terraform:apply TERRAFORM_NAME=${terraformName} TERRAFORM_ENVIRONMENT=${terraformEnvironment} TERRAFORM_STACK=${terraformStack} TERRAFORM_PLAN=/share/terraform.plan"
      }
    } else {
      echo 'No changes - no apply needed'
    }
  }

  if (terraformStack == 'vault') {
    stage("ensure vault is initialized") {
      wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
        sh "docker run --rm ${imageName} bundle exec rake vault:initialize TERRAFORM_ENVIRONMENT=${terraformEnvironment}"
      }
    }
  }

}
