{{/* vim: set ft=tf: */}}

{{range .Roles}}
# This is the security group for the role
resource "aws_security_group" "{{.TFName}}" {
  name   = "${data.template_file.stack_name.rendered}-{{.DNSName}}"
  vpc_id = "${data.terraform_remote_state.network.vpc_id}"

  tags {
    Name        = "${data.template_file.stack_name.rendered}-{{.DNSName}}"
    Environment = "${var.environment}"
    Project     = "${var.project}"
    Contact     = "${var.contact}"
  }
}

{{ if .HasELB }}
# This is the security group for the ELB of the role
resource "aws_security_group" "{{.TFName}}_elb" {
  name   = "${data.template_file.stack_name.rendered}-{{.DNSName}}-elb"
  vpc_id = "${data.terraform_remote_state.network.vpc_id}"

  tags {
    Name        = "${data.template_file.stack_name.rendered}-{{.DNSName}}-elb"
    Environment = "${var.environment}"
    Project     = "${var.project}"
    Contact     = "${var.contact}"
  }
}
{{ end }}
{{ end }}

{{range $role, $rules := .AWSSGRules}}
{{range $rules}}
resource "aws_security_group_rule" "{{.Destination}}_allow_{{.Service}}_from_{{.Source}}" {
  type                     = "{{.Direction}}"
  from_port                = {{.FromPort}}
  to_port                  = {{.ToPort}}
  protocol                 = "{{.Protocol}}"
{{if .CIDRBlock}}
  cidr_blocks              = ["{{CIDRToString .CIDRBlock}}"]
{{else}}
  source_security_group_id = "{{.SourceSGGroupID}}"
{{end}}
  security_group_id        = "{{.SGID}}"
}
{{end}}
{{end}}
