#cloud-config
repo_update: true
repo_upgrade: all


users:
- default

- name: vault
  system: true
  home_dir: /var/lib/vault

- name: consul
  system: true
  home_dir: /var/lib/consul

write_files:
- path: /etc/systemd/system/attach-ebs-volume.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Attach EBS volume if needed

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    ExecStart=/bin/bash -c ' \
      test -e /dev/xvdd && exit 0; \
      aws ec2 attach-volume --region ${region} --volume-id ${volume_id} --instance-id $(curl -sL http://169.254.169.254/latest/meta-data/instance-id) --device /dev/xvdd \
    '
    ExecStart=/bin/bash -c ' \
      until test -e /dev/xvdd; do \
        echo "Waiting for device /dev/xvdd ..."; \
        sleep 1; \
      done \
    '
    ExecStop=/bin/bash -c ' \
      test -e /dev/xvdd || exit 0 \
      aws ec2 detach-volume --region ${region} --volume-id ${volume_id} --instance-id $(curl -sl http://169.254.169.254/latest/meta-data/instance-id) \
    '

- path: /etc/systemd/system/ensure-ebs-volume-formatted.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Format EBS volume if needed
    After=attach-ebs-volume.service
    Requires=attach-ebs-volume.service

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    ExecStart=/bin/bash -c 'blkid /dev/xvdd || (wipefs -fa /dev/xvdd && mkfs.ext4 /dev/xvdd)'

- path: /etc/systemd/system/var-lib-consul.mount
  permissions: '0644'
  content: |
    [Unit]
    Description=Mount consul data
    After=ensure-ebs-volume-formatted.service
    Requires=ensure-ebs-volume-formatted.service

    [Mount]
    What=/dev/xvdd
    Where=/var/lib/consul
    Type=ext4

- path: /etc/systemd/system/consul.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Consul server
    Requires=var-lib-consul.mount
    After=var-lib-consul.mount

    [Service]
    User=consul
    Group=consul
    PermissionsStartOnly=true
    ExecStartPre=/bin/mkdir -p /var/lib/consul/data
    ExecStartPre=/bin/chown -cR consul:consul /var/lib/consul/data
    ExecStartPre=/bin/chmod 0750 /var/lib/consul/data
    ExecStart=/usr/local/bin/consul \
       agent \
       -node=${fqdn} \
       -data-dir=/var/lib/consul/data \
       -server \
       -config-dir=/etc/consul \
       -advertise=${private_ip} \
       -retry-join-ec2-tag-key=VaultCluster \
       -retry-join-ec2-tag-value=${environment}

    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/vault-assets.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Fetch vault assets
    After=network-online.target
    Requires=network-online.target

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    ExecStart=/bin/bash -c "aws configure set s3.signature_version s3v4 && aws s3 cp ${vault_tls_cert_path} /etc/vault/tls/tls.pem && aws s3 cp ${vault_tls_key_path} /etc/vault/tls/tls-key.pem && chmod 0600 /etc/vault/tls/tls-key.pem && aws s3 cp ${vault_tls_ca_path} /etc/vault/tls/ca.pem"

    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/vault.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Vault server
    Requires=consul.service vault-assets.service
    After=consul.service vault-assets.service

    [Service]
    Environment=AWS_REGION=${region}
    Environment=UNSEAL_KEY_NAME=${vault_unseal_key_name}
    ExecStart=/usr/local/bin/vault server \
      -config=/etc/vault/vault.hcl
    ExecStartPost=/usr/local/bin/vault-unseal.sh
    Restart=on-failure
    RestartSec=10

    [Install]
    WantedBy=multi-user.target

- path: "/etc/consul/consul.json"
  permissions: "0600"
  content: |
    {
      "acl_default_policy" : "deny",
      "acl_down_policy" : "deny",
      "acl_master_token" : "${consul_master_token}",
      "acl_datacenter" : "${region}",
      "datacenter" : "${region}",
      "log_level" : "INFO",
      "disable_remote_exec" : true,
      "client_addr" : "0.0.0.0",
      "bind_addr" : "0.0.0.0",
      "encrypt" : "${consul_encrypt}",
      "server" : true,
      "bootstrap_expect" : ${instance_count}
      }

- path: "/etc/vault/vault.hcl"
  permissions: "0600"
  content: |
    backend "consul" {
      address = "127.0.0.1:8500"
      scheme = "http"
      token  = "${consul_master_token}"
      path = "vault-${environment}/"
      disable_registration = "true"
    }

    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_cert_file = "/etc/vault/tls/tls.pem"
      tls_key_file = "/etc/vault/tls/tls-key.pem"
    }

    default_lease_ttl = "168h"
    max_lease_ttl = "720h"
    disable_mlock = false

- path: /usr/local/bin/download-vault-consul.sh
  permissions: "0755"
  content: |
    #!/bin/bash

    set -euo pipefail

    VAULT_VERSION=$${VAULT_VERSION:-${vault_version}}
    CONSUL_VERSION=$${CONSUL_VERSION:-${consul_version}}
    DEST_DIR=$${DEST_DIR:-/usr/local/bin}

    OLD_PWD=$(pwd)
    TEMP_DIR=$(mktemp -d)

    trap cleanup EXIT

    function cleanup {
        echo "cleanup temp dir"
        cd "$${OLD_PWD}"
        rm -rf "$${TEMP_DIR}"
    }

    function download_app {
        APP=$1
        VERSION=$2

        gpg --import - <<EOF
    -----BEGIN PGP PUBLIC KEY BLOCK-----
    Version: GnuPG v1

    mQENBFMORM0BCADBRyKO1MhCirazOSVwcfTr1xUxjPvfxD3hjUwHtjsOy/bT6p9f
    W2mRPfwnq2JB5As+paL3UGDsSRDnK9KAxQb0NNF4+eVhr/EJ18s3wwXXDMjpIifq
    fIm2WyH3G+aRLTLPIpscUNKDyxFOUbsmgXAmJ46Re1fn8uKxKRHbfa39aeuEYWFA
    3drdL1WoUngvED7f+RnKBK2G6ZEpO+LDovQk19xGjiMTtPJrjMjZJ3QXqPvx5wca
    KSZLr4lMTuoTI/ZXyZy5bD4tShiZz6KcyX27cD70q2iRcEZ0poLKHyEIDAi3TM5k
    SwbbWBFd5RNPOR0qzrb/0p9ksKK48IIfH2FvABEBAAG0K0hhc2hpQ29ycCBTZWN1
    cml0eSA8c2VjdXJpdHlAaGFzaGljb3JwLmNvbT6JATgEEwECACIFAlMORM0CGwMG
    CwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEFGFLYc0j/xMyWIIAIPhcVqiQ59n
    Jc07gjUX0SWBJAxEG1lKxfzS4Xp+57h2xxTpdotGQ1fZwsihaIqow337YHQI3q0i
    SqV534Ms+j/tU7X8sq11xFJIeEVG8PASRCwmryUwghFKPlHETQ8jJ+Y8+1asRydi
    psP3B/5Mjhqv/uOK+Vy3zAyIpyDOMtIpOVfjSpCplVRdtSTFWBu9Em7j5I2HMn1w
    sJZnJgXKpybpibGiiTtmnFLOwibmprSu04rsnP4ncdC2XRD4wIjoyA+4PKgX3sCO
    klEzKryWYBmLkJOMDdo52LttP3279s7XrkLEE7ia0fXa2c12EQ0f0DQ1tGUvyVEW
    WmJVccm5bq25AQ0EUw5EzQEIANaPUY04/g7AmYkOMjaCZ6iTp9hB5Rsj/4ee/ln9
    wArzRO9+3eejLWh53FoN1rO+su7tiXJA5YAzVy6tuolrqjM8DBztPxdLBbEi4V+j
    2tK0dATdBQBHEh3OJApO2UBtcjaZBT31zrG9K55D+CrcgIVEHAKY8Cb4kLBkb5wM
    skn+DrASKU0BNIV1qRsxfiUdQHZfSqtp004nrql1lbFMLFEuiY8FZrkkQ9qduixo
    mTT6f34/oiY+Jam3zCK7RDN/OjuWheIPGj/Qbx9JuNiwgX6yRj7OE1tjUx6d8g9y
    0H1fmLJbb3WZZbuuGFnK6qrE3bGeY8+AWaJAZ37wpWh1p0cAEQEAAYkBHwQYAQIA
    CQUCUw5EzQIbDAAKCRBRhS2HNI/8TJntCAClU7TOO/X053eKF1jqNW4A1qpxctVc
    z8eTcY8Om5O4f6a/rfxfNFKn9Qyja/OG1xWNobETy7MiMXYjaa8uUx5iFy6kMVaP
    0BXJ59NLZjMARGw6lVTYDTIvzqqqwLxgliSDfSnqUhubGwvykANPO+93BBx89MRG
    unNoYGXtPlhNFrAsB1VR8+EyKLv2HQtGCPSFBhrjuzH3gxGibNDDdFQLxxuJWepJ
    EK1UbTS4ms0NgZ2Uknqn1WRU1Ki7rE4sTy68iZtWpKQXZEJa0IGnuI2sSINGcXCJ
    oEIgXTMyCILo34Fa/C6VCm2WBgz9zZO8/rHIiQm1J5zqz0DrDwKBUM9C
    =LYpS
    -----END PGP PUBLIC KEY BLOCK-----
    EOF

        # download $${APP}
        cd "$${TEMP_DIR}"
        curl -OsL "https://releases.hashicorp.com/$${APP}/$${VERSION}/$${APP}_$${VERSION}_linux_amd64.zip"
        curl -OsL "https://releases.hashicorp.com/$${APP}/$${VERSION}/$${APP}_$${VERSION}_SHA256SUMS"
        curl -OsL "https://releases.hashicorp.com/$${APP}/$${VERSION}/$${APP}_$${VERSION}_SHA256SUMS.sig"

        # gpg verify
        gpg --verify "$${APP}_$${VERSION}_SHA256SUMS.sig" "$${APP}_$${VERSION}_SHA256SUMS"

        # verify the SHASUM matches the binary
        grep "$${APP}_$${VERSION}_linux_amd64.zip" "$${APP}_$${VERSION}_SHA256SUMS" | sha256sum -c

        unzip "$${APP}_$${VERSION}_linux_amd64.zip"

        mv "$${APP}" "$${DEST_DIR}/$${APP}"
        chmod 0755 "$${DEST_DIR}/$${APP}"
        chown 0:0 "$${DEST_DIR}/$${APP}"
    }

    download_app "vault" "$${VAULT_VERSION}"
    download_app "consul" "$${CONSUL_VERSION}"


- path: /usr/local/bin/vault-unseal.sh
  permissions: "0755"
  content: |
    #!/bin/bash

    set -e

    while true; do
      # exit right away if already unsealed
      if [ "$(curl -s -k https://localhost:8200/v1/sys/health | jq -r .sealed)" == "false" ]; then exit 0; fi

      # try to unseal if initialized
      if [ "$(curl -s -k https://localhost:8200/v1/sys/init | jq -r .initialized)" == "true" ]; then
        echo "get unseal key"
        SEAL_KEY=$(aws ssm get-parameters --region $${AWS_REGION} --names $${UNSEAL_KEY_NAME} --with-decryption |  grep -o '"Value": ".*"' | cut -d '"' -f 4)
        curl -s -k -X PUT -d "{\"key\": \"$${SEAL_KEY}\"}" https://localhost:8200/v1/sys/unseal
        # check status
        if [ "$(curl -s -k https://localhost:8200/v1/sys/health | jq -r .sealed)" == "false" ]; then
          echo "vault unsealed"
          exit 0
        fi
      else
        echo "vault uninitialized"
      fi

      sleep 5
    done

runcmd:
- chown consul:consul /etc/consul/consul.json
- chown vault:vault /etc/vault/vault.hcl
- hostname ${fqdn}
- yum -y install epel-release
- yum -y install unzip jq curl gpg awscli
- /usr/local/bin/download-vault-consul.sh
- systemctl enable consul.service vault.service
- systemctl start consul.service vault.service
